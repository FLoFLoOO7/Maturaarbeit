x=[
['Blu', 'Gel', 'Blu', 'Blu', 'Gel', 'Blu', 'Blu', 'Gel', 'Blu'], 
['Wei', 'Gre', 'Wei', 'Wei', 'Gre', 'Wei', 'Wei', 'Gre', 'Wei'], 
['Gre', 'Wei', 'Gre', 'Gre', 'Wei', 'Gre', 'Gre', 'Wei', 'Gre'], 
['Gel', 'Blu', 'Gel', 'Gel', 'Blu', 'Gel', 'Gel', 'Blu', 'Gel'], 
['Ora', 'Ora', 'Ora', 'Rot', 'Rot', 'Rot', 'Ora', 'Ora', 'Ora'], 
['Rot', 'Rot', 'Rot', 'Ora', 'Ora', 'Ora', 'Rot', 'Rot', 'Rot']]
l_tuplets=[
    ((0, 1), (1, 7)), ((0, 3), (5, 3)), ((0, 5), (4, 3)), ((0, 7), (3, 1)),
    ((1, 1), (2, 7)), ((1, 3), (5, 7)), ((1, 5), (4, 1)), ((1, 7), (0, 1)),
    ((2, 1), (3, 7)), ((2, 3), (5, 5)), ((2, 5), (4, 5)), ((2, 7), (1, 1)),
    ((3, 1), (0, 7)), ((3, 3), (5, 1)), ((3, 5), (4, 7)), ((3, 7), (2, 1)),
    ((4, 1), (1, 5)), ((4, 3), (0, 5)), ((4, 5), (2, 5)), ((4, 7), (3, 5)),
    ((5, 1), (3, 3)), ((5, 3), (0, 3)), ((5, 5), (2, 3)), ((5, 7), (1, 3))
]

tuplets={
    (0,1):(1,7),
    (0,3):(5,3),
    (0,5):(4,3),
    (0,7):(3,1),
    
    (1,1):(2,7),
    (1,3):(5,7),
    (1,5):(4,1),
    (1,7):(0,1),

    (2,1):(3,7),
    (2,3):(5,5),
    (2,5):(4,5),
    (2,7):(1,1),

    (3,1):(0,7),
    (3,3):(5,1),
    (3,5):(4,7),
    (3,7):(2,1),

    (4,1):(1,5),
    (4,3):(0,5),
    (4,5):(2,5),
    (4,7):(3,5),
    
    (5,1):(3,3),
    (5,3):(0,3),
    (5,5):(2,3),
    (5,7):(1,3),
}

map0 = {
        ((1, 7), (0, 1)): ['D', 'R', 'F'],
        ((0, 3), (5, 3)): ['F'],
        ((5, 3), (0, 3)): ['Rr', 'Dr'],
        ((0, 5), (4, 3)): ['Fr'],
        ((4, 3), (0, 5)): ['L', 'D'],
        ((0, 7), (3, 1)): ['F', 'F'],
        ((3, 1), (0, 7)): ['U', 'L', 'Fr'],
        ((1, 3), (5, 1)): ['R', 'F'],
        ((5, 1), (1, 3)): ['Dr'],
        ((1, 5), (4, 7)): ['Lr', 'Fr'],
        ((4, 7), (1, 5)): ['D'],
        ((4, 1), (3, 5)): ['Ur', 'F', 'F'],
        ((3, 5), (4, 1)): ['L', 'Fr'],
        ((5, 7), (3, 3)): ['U', 'F', 'F'],
        ((3, 3), (5, 7)): ['Rr', 'F'],
        ((2, 7), (1, 1)): ['D', 'D'],
        ((1, 1), (2, 7)): ['Dr', 'R', 'Fr'],
        ((2, 1), (3, 7)): ['U', 'U', 'F', 'F'],
        ((3, 7), (2, 1)): ['U', 'Rr', 'F'],
        ((2, 3), (5, 3)): ['R', 'R', 'F'],
        ((5, 3), (2, 3)): ['R', 'Dr'],
        ((2, 5), (4, 3)): ['L', 'L', 'Fr'],
        ((4, 3), (2, 5)): ['Lr', 'D'],
    }

map1 = {
        ((5, 5), (0, 3)): ['Rr', 'F', 'Dr', 'Fr'],
        ((0, 5), (4, 5)): ['L', 'F', 'F', 'Lr', 'F', 'F'],
        ((4, 5), (0, 5)): ['L', 'F', 'D', 'Fr'],
        ((0, 7), (3, 1)): ['D', 'F', 'Dr'],
        ((3, 1), (0, 7)): ['Ur', 'Rr'],
        ((1, 3), (5, 1)): ['R'],
        ((5, 1), (1, 3)): ['F', 'Dr', 'Fr'],
        ((1, 5), (4, 7)): ['F', 'F', 'Lr', 'F', 'F'],
        ((4, 7), (1, 5)): ['F', 'D', 'Fr'],
        ((4, 1), (3, 5)): ['Fr', 'Ur', 'F'],
        ((3, 5), (4, 1)): ['F', 'F', 'L', 'F', 'F'],
        ((5, 7), (3, 3)): ['Fr', 'U', 'F'],
        ((3, 3), (5, 7)): ['Rr'],
        ((2, 7), (1, 1)): ['B', 'R', 'R'],
        ((1, 1), (2, 7)): ['F', 'Dr', 'Fr', 'R'],
        ((2, 1), (3, 7)): ['Fr', 'U', 'U', 'F'],
        ((3, 7), (2, 1)): ['U', 'Rr'],
        ((2, 3), (5, 3)): ['R', 'R'],
        ((5, 3), (2, 3)): ['R', 'F', 'Dr', 'Fr'],
        ((2, 5), (4, 3)): ['B', 'B', 'R', 'R'],
        ((4, 3), (2, 5)): ['Lr', 'F', 'D', 'Fr'],
    }

map2 = {
        ((4, 5), (0, 5)): ['L', 'Fr', 'D', 'F'],
        ((0, 7), (3, 1)): ['U', 'F', 'Ur', 'Fr'],
        ((3, 1), (0, 7)): ['U', 'L'],
        ((1, 3), (5, 1)): ['F', 'F', 'R', 'F', 'F'],
        ((5, 1), (1, 3)): ['Fr', 'Dr', 'F'],
        ((1, 5), (4, 7)): ['Lr'],
        ((4, 7), (1, 5)): ['Fr', 'D', 'F'],
        ((4, 1), (3, 5)): ['F', 'Ur', 'Fr'],
        ((3, 5), (4, 1)): ['L'],
        ((5, 7), (3, 3)): ['F', 'U', 'Fr'],
        ((3, 3), (5, 7)): ['F', 'F', 'Rr', 'F', 'F'],
        ((2, 7), (1, 1)): ['Br', 'L', 'L'],
        ((1, 1), (2, 7)): ['Fr', 'D', 'F', 'Lr'],
        ((2, 1), (3, 7)): ['F', 'U', 'U', 'Fr'],
        ((3, 7), (2, 1)): ['Ur', 'L'],
        ((2, 3), (5, 3)): ['B', 'B', 'L', 'L'],
        ((5, 3), (2, 3)): ['B', 'Ur', 'L'],
        ((2, 5), (4, 3)): ['L', 'L'],
        ((4, 3), (2, 5)): ['L', 'F', 'Ur', 'Fr'],
    }

map3 = {
        ((3, 1), (0, 7)): ['Ur', 'Fr', 'L', 'F'],
        ((1, 3), (5, 1)): ['F', 'R', 'Fr'],
        ((5, 1), (1, 3)): ['F', 'F', 'Dr', 'F', 'F'],
        ((1, 5), (4, 7)): ['Fr', 'Lr'],
        ((4, 7), (1, 5)): ['F', 'F', 'D', 'F', 'F'],
        ((4, 1), (3, 5)): ['Ur'],
        ((3, 5), (4, 1)): ['Fr', 'L', 'F'],
        ((5, 7), (3, 3)): ['U'],
        ((3, 3), (5, 7)): ['F', 'Rr', 'Fr'],
        ((2, 7), (1, 1)): ['B', 'B', 'U', 'U'],
        ((1, 1), (2, 7)): ['B', 'B', 'U', 'F', 'R', 'Fr'],
        ((2, 1), (3, 7)): ['U', 'U'],
        ((3, 7), (2, 1)): ['U', 'F', 'R', 'Fr'],
        ((2, 3), (5, 3)): ['B', 'U', 'U'],
        ((5, 3), (2, 3)): ['B', 'U', 'F', 'R', 'Fr'],
        ((2, 5), (4, 3)): ['Br', 'U', 'U'],
        ((4, 3), (2, 5)): ['Br', 'U', 'F', 'R', 'Fr'],
    }


maps = [map0, map1, map2, map3]

def R(y):
    x=5
    #1->3 2->6 3->9 4->2 6->8 9->7 7->1 8->4
    y[x][0],y[x][1],y[x][2],  y[x][3],y[x][5],y[x][6],y[x][7],y[x][8]=y[x][2],y[x][5],y[x][8],y[x][1],y[x][7],y[x][0],y[x][3],y[x][6]
    y[0][0],y[0][3],y[0][6],  y[1][0],y[1][3],y[1][6], y[2][0],y[2][3],y[2][6], y[3][0],y[3][3],y[3][6]  =y[1][0],y[1][3],y[1][6],y[2][0],y[2][3],y[2][6],y[3][0],y[3][3],y[3][6],y[0][0],y[0][3],y[0][6],
    
    return y
def L(y):
    x=4
    #1->3 2->6 3->9 4->2 6->8 9->7 7->1 8->4
    y[x][0],y[x][1],y[x][2],  y[x][3],y[x][5],y[x][6],y[x][7],y[x][8]=y[x][2],y[x][5],y[x][8],y[x][1],y[x][7],y[x][0],y[x][3],y[x][6]
    y[0][2],y[0][5],y[0][8],  y[1][2],y[1][5],y[1][8], y[2][2],y[2][5],y[2][8], y[3][2],y[3][5],y[3][8]  =  y[3][2],y[3][5],y[3][8], y[0][2],y[0][5],y[0][8],y[1][2],y[1][5],y[1][8], y[2][2],y[2][5],y[2][8], 
   
    return y
def F(y):
    S1=1
    S2=5
    S3=3
    S4=4
    x=0
    y[S1][6], y[S1][7],y[S1][8],     y[S2][8], y[S2][5], y[S2][2],     y[S3][2], y[S3][1], y[S3][0],     y[S4][8], y[S4][5], y[S4][2], y[x][0],y[x][1],y[x][2],y[x][3],y[x][5],y[x][6],  y[x][7],  y[x][8]  =         y[S2][8], y[S2][5], y[S2][2],     y[S3][2], y[S3][1], y[S3][0],     y[S4][8], y[S4][5], y[S4][2],y[S1][6], y[S1][7],y[S1][8],  y[x][2],y[x][5],y[x][8],y[x][1],y[x][7],y[x][0],y[x][3],y[x][6]
    
    return y

def B(y):
    S1=1
    S2=5
    S3=3
    S4=4
    x=2
    y[x][0],y[x][1],y[x][2],  y[x][3],y[x][5],y[x][6],y[x][7],y[x][8]=y[x][2],y[x][5],y[x][8],y[x][1],y[x][7],y[x][0],y[x][3],y[x][6]
    y[S1][0], y[S1][1],y[S1][2],     y[S2][6], y[S2][3], y[S2][0],     y[S3][6], y[S3][7], y[S3][8],     y[S4][6], y[S4][3], y[S4][0]  =     y[S4][6], y[S4][3], y[S4][0]  , y[S1][6], y[S1][7],y[S1][8],     y[S2][6], y[S2][3], y[S2][0],     y[S3][0], y[S3][1], y[S3][2],       
    
    return y
def U(y):
    S1=0
    S2=4
    S3=2
    S4=5
    x=3
    y[x][0],y[x][1],y[x][2],  y[x][3],y[x][5],y[x][6],y[x][7],y[x][8]=y[x][2],y[x][5],y[x][8],y[x][1],y[x][7],y[x][0],y[x][3],y[x][6]
    y[S1][6], y[S1][7],y[S1][8],     y[S2][0], y[S2][1], y[S2][2],     y[S3][0], y[S3][1], y[S3][2],     y[S4][0], y[S4][1], y[S4][2]  =     y[S4][0], y[S4][1], y[S4][2]     , y[S1][6], y[S1][7],y[S1][8],     y[S2][0], y[S2][1], y[S2][2],     y[S3][0], y[S3][1], y[S3][2],     
    
    return y
def D(y):
    S1=2
    S2=4
    S3=0
    S4=5
    x=1
    y[x][0],y[x][1],y[x][2],  y[x][3],y[x][5],y[x][6],y[x][7],y[x][8]=y[x][2],y[x][5],y[x][8],y[x][1],y[x][7],y[x][0],y[x][3],y[x][6]
    y[S1][6], y[S1][7],y[S1][8],     y[S2][8], y[S2][7], y[S2][6],     y[S3][0], y[S3][1], y[S3][2],     y[S4][0], y[S4][1], y[S4][2]  =     y[S4][0], y[S4][1], y[S4][2]     , y[S1][6], y[S1][7],y[S1][8],     y[S2][8], y[S2][7], y[S2][6],     y[S3][0], y[S3][1], y[S3][2],     
    
    return y

#inverted
def Rr(y):
    x=5
    #1->3 2->6 3->9 4->2 6->8 9->7 7->1 8->4
    y[x][2],y[x][5],y[x][8],y[x][1],y[x][7],y[x][0],y[x][3],y[x][6]=y[x][0],y[x][1],y[x][2],  y[x][3],y[x][5],y[x][6],y[x][7],y[x][8]
    
    y[1][0],y[1][3],y[1][6],y[2][0],y[2][3],y[2][6],y[3][0],y[3][3],y[3][6],y[0][0],y[0][3],y[0][6],=y[0][0],y[0][3],y[0][6],  y[1][0],y[1][3],y[1][6], y[2][0],y[2][3],y[2][6], y[3][0],y[3][3],y[3][6]  
    
    return y
def Lr(y):
    x=4
    #1->3 2->6 3->9 4->2 6->8 9->7 7->1 8->4
    y[x][2],y[x][5],y[x][8],y[x][1],y[x][7],y[x][0],y[x][3],y[x][6]=y[x][0],y[x][1],y[x][2],  y[x][3],y[x][5],y[x][6],y[x][7],y[x][8]
    y[3][2],y[3][5],y[3][8], y[0][2],y[0][5],y[0][8],y[1][2],y[1][5],y[1][8], y[2][2],y[2][5],y[2][8],=y[0][2],y[0][5],y[0][8],  y[1][2],y[1][5],y[1][8], y[2][2],y[2][5],y[2][8], y[3][2],y[3][5],y[3][8]   
   
    return y
def Fr(y):
    S1=1
    S2=5
    S3=3
    S4=4
    x=0
    y[x][2],y[x][5],y[x][8],y[x][1],y[x][7],y[x][0],y[x][3],y[x][6]=y[x][0],y[x][1],y[x][2],  y[x][3],y[x][5],y[x][6],y[x][7],y[x][8]
    y[S2][8], y[S2][5], y[S2][2],     y[S3][2], y[S3][1], y[S3][0],     y[S4][8], y[S4][5], y[S4][2],y[S1][6], y[S1][7],y[S1][8],=y[S1][6], y[S1][7],y[S1][8],     y[S2][8], y[S2][5], y[S2][2],     y[S3][2], y[S3][1], y[S3][0],     y[S4][8], y[S4][5], y[S4][2]  
    
    return y

def Br(y):
    S1=1
    S2=5
    S3=3
    S4=4
    x=2
    y[x][2],y[x][5],y[x][8],y[x][1],y[x][7],y[x][0],y[x][3],y[x][6]=y[x][0],y[x][1],y[x][2],  y[x][3],y[x][5],y[x][6],y[x][7],y[x][8]
    y[S4][6], y[S4][3], y[S4][0]  , y[S1][6], y[S1][7],y[S1][8],     y[S2][6], y[S2][3], y[S2][0],     y[S3][0], y[S3][1], y[S3][2],=y[S1][0], y[S1][1],y[S1][2],     y[S2][6], y[S2][3], y[S2][0],     y[S3][6], y[S3][7], y[S3][8],     y[S4][6], y[S4][3], y[S4][0]         
    
    return y
def Ur(y):
    S1=0
    S2=4
    S3=2
    S4=5
    x=3
    y[x][2],y[x][5],y[x][8],y[x][1],y[x][7],y[x][0],y[x][3],y[x][6]=y[x][0],y[x][1],y[x][2],  y[x][3],y[x][5],y[x][6],y[x][7],y[x][8]
    y[S4][0], y[S4][1], y[S4][2]     , y[S1][6], y[S1][7],y[S1][8],     y[S2][0], y[S2][1], y[S2][2],     y[S3][0], y[S3][1], y[S3][2],     =y[S1][6], y[S1][7],y[S1][8],     y[S2][0], y[S2][1], y[S2][2],     y[S3][0], y[S3][1], y[S3][2],     y[S4][0], y[S4][1], y[S4][2]
    
    return y
def Dr(y):
    S1=2
    S2=4
    S3=0
    S4=5
    x=1
    y[x][2],y[x][5],y[x][8],y[x][1],y[x][7],y[x][0],y[x][3],y[x][6]=y[x][0],y[x][1],y[x][2],  y[x][3],y[x][5],y[x][6],y[x][7],y[x][8]
    y[S4][0], y[S4][1], y[S4][2]     , y[S1][6], y[S1][7],y[S1][8],     y[S2][8], y[S2][7], y[S2][6],     y[S3][0], y[S3][1], y[S3][2],=y[S1][6], y[S1][7],y[S1][8],     y[S2][8], y[S2][7], y[S2][6],     y[S3][0], y[S3][1], y[S3][2],     y[S4][0], y[S4][1], y[S4][2]       
    
    return y

def finde_kanten(a,kanten):
    kanten=[1,3,5,7]
    weisse_kanten=[]
    for i in range (6):
        for l in kanten:
            if a[i][l]==a[0][4]:
                weisse_kanten.append([i,l])
    
    return weisse_kanten
def cross(x):
    kanten = finde_kanten(x)
    kanten_cross = []
    for i in kanten:
        k = tuple(i)
        if k in tuplets:
            sub = tuplets[k]
            kanten_cross.append((k, sub))
    print(kanten_cross)
    return kanten_cross
def kreuz_V3(x):
    moves = []
    counter = 0

    move_funcs = {
        'F': F, 'Fr': Fr,
        'R': R, 'Rr': Rr,
        'L': L, 'Lr': Lr,
        'U': U, 'Ur': Ur,
        'D': D, 'Dr': Dr,
        'B': B, 'Br': Br
    }

   
    

    while counter < 4:
        kanten = cross(x)
        Ziel = [None, None, None, None]

        for kante in kanten:
            if x[kante[1][0]][kante[1][1]] == x[1][4]:
                Ziel[0] = kante
            elif x[kante[1][0]][kante[1][1]] == x[3][4]:
                Ziel[1] = kante
            elif x[kante[1][0]][kante[1][1]] == x[4][4]:
                Ziel[2] = kante
            elif x[kante[1][0]][kante[1][1]] == x[5][4]:
                Ziel[3] = kante

        for kante in Ziel:
            if kante is None:
                continue
            if x[kante[1][0]][kante[1][1]] == x[kante[1][0]][4]:
                continue
            current_map = maps[counter]
            if kante in current_map:
                for move in current_map[kante]:
                    move_funcs[move](x)
                    moves.append(move)
                counter += 1
                break  # Restart loop after each Move-Set
        else:
            break  # Alle Kanten sind korrekt

    return moves
print(x)
kreuz_V3(x)
print(x)